diff --git a/core/lib/Drupal/Component/Render/FormattableMarkup.php b/core/lib/Drupal/Component/Render/FormattableMarkup.php
index 1eff50e..016dba1 100644
--- a/core/lib/Drupal/Component/Render/FormattableMarkup.php
+++ b/core/lib/Drupal/Component/Render/FormattableMarkup.php
@@ -233,7 +233,7 @@ protected static function placeholderFormat($string, array $args) {
         default:
           // Deprecate support for random variables that won't be replaced.
           if (ctype_alpha($key[0]) && strpos($string, $key) === FALSE) {
-             @trigger_error(sprintf('Support for keys without a placeholder prefix is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Invalid placeholder (%s) with string: "%s". See https://www.drupal.org/node/2807743', $key, $string), E_USER_DEPRECATED);
+            @trigger_error(sprintf('Support for keys without a placeholder prefix is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Invalid placeholder (%s) with string: "%s". See https://www.drupal.org/node/2807743', $key, $string), E_USER_DEPRECATED);
           }
           else {
             trigger_error(sprintf('Invalid placeholder (%s) with string: "%s"', $key, $string), E_USER_WARNING);
diff --git a/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php b/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php
index 1cc119f..5512e13 100644
--- a/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php
+++ b/core/tests/Drupal/FunctionalJavascriptTests/WebDriverTestBase.php
@@ -96,6 +96,7 @@ protected function tearDown() {
       $warnings = $this->getSession()->evaluateScript("JSON.parse(sessionStorage.getItem('js_deprecation_log_test.warnings') || JSON.stringify([]))");
       foreach ($warnings as $warning) {
         if (strpos($warning, '[Deprecation]') === 0) {
+          // phpcs:ignore Drupal.Semantics.FunctionTriggerError
           @trigger_error('Javascript Deprecation:' . substr($warning, 13), E_USER_DEPRECATED);
         }
       }
diff --git a/core/tests/Drupal/FunctionalTests/Image/ToolkitTestBase.php b/core/tests/Drupal/FunctionalTests/Image/ToolkitTestBase.php
index 2d86844..9e823d1 100644
--- a/core/tests/Drupal/FunctionalTests/Image/ToolkitTestBase.php
+++ b/core/tests/Drupal/FunctionalTests/Image/ToolkitTestBase.php
@@ -2,7 +2,7 @@
 
 namespace Drupal\FunctionalTests\Image;
 
-@trigger_error('The ' . __NAMESPACE__ . '\ToolkitTestBase class is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. . There is no replacement provided as functional test base class because toolkit operations should be tested as kernel tests. \Drupal\KernelTests\Core\Image\ToolkitTestTrait trait has been added to provide a similar functionality for toolkit kernel tests. See https://www.drupal.org/node/3035573.', E_USER_DEPRECATED);
+@trigger_error('The ' . __NAMESPACE__ . '\ToolkitTestBase class is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. There is no replacement provided as functional test base class because toolkit operations should be tested as kernel tests. \Drupal\KernelTests\Core\Image\ToolkitTestTrait trait has been added to provide a similar functionality for toolkit kernel tests. See https://www.drupal.org/node/3035573', E_USER_DEPRECATED);
 
 use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Tests\BrowserTestBase;
diff --git a/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php b/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php
index c92ed67..0b9cb20 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/ConnectionTest.php
@@ -124,8 +124,8 @@ public function testConnectionOptions() {
    * @group legacy
    */
   public function testTransactionsOptionDeprecation() {
-    $this->expectDeprecation('Passing a \'transactions\' connection option to Drupal\Core\Database\Connection::__construct is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745');
-    $this->expectDeprecation('Drupal\Core\Database\Connection::supportsTransactions is deprecated in drupal:9.1.0 and is removed in drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745');
+    $this->expectDeprecation('Passing a \'transactions\' connection option to Drupal\Core\Database\Connection::__construct() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745');
+    $this->expectDeprecation('Drupal\Core\Database\Connection::supportsTransactions() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. All database drivers must support transactions. See https://www.drupal.org/node/2278745');
     $connection_info = Database::getConnectionInfo('default');
     $connection_info['default']['transactions'] = FALSE;
     Database::addConnectionInfo('default', 'foo', $connection_info['default']);
diff --git a/core/tests/Drupal/KernelTests/Core/Database/StatementWrapperLegacyTest.php b/core/tests/Drupal/KernelTests/Core/Database/StatementWrapperLegacyTest.php
index 56609ee..f49889f 100644
--- a/core/tests/Drupal/KernelTests/Core/Database/StatementWrapperLegacyTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Database/StatementWrapperLegacyTest.php
@@ -30,7 +30,7 @@ protected function setUp(): void {
    * @covers ::getQueryString
    */
   public function testQueryString() {
-    $this->expectDeprecation('StatementWrapper::$queryString should not be accessed in drupal:9.1.0 and will error in drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
+    $this->expectDeprecation('StatementWrapper::$queryString is deprecated in drupal:9.1.0 and will error in drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
     $this->assertStringContainsString('SELECT * FROM ', $this->statement->queryString);
     $this->assertStringContainsString('SELECT * FROM ', $this->statement->getQueryString());
   }
@@ -47,7 +47,7 @@ public function testMissingMethod() {
    * Tests calling an existing \PDOStatement method.
    */
   public function testClientStatementMethod() {
-    $this->expectDeprecation('StatementWrapper::columnCount should not be called in drupal:9.1.0 and will error in drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
+    $this->expectDeprecation('StatementWrapper::columnCount() is deprecated in drupal:9.1.0 and will error in drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
     $this->statement->execute();
     $this->assertEquals(4, $this->statement->columnCount());
   }
@@ -56,7 +56,7 @@ public function testClientStatementMethod() {
    * @covers ::bindParam
    */
   public function testBindParam() {
-    $this->expectDeprecation('StatementWrapper::bindParam should not be called in drupal:9.1.0 and will error in drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
+    $this->expectDeprecation('StatementWrapper::bindParam() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
     $test = NULL;
     $this->assertTrue($this->statement->bindParam(':name', $test));
   }
@@ -65,7 +65,7 @@ public function testBindParam() {
    * @covers ::bindColumn
    */
   public function testBindColumn() {
-    $this->expectDeprecation('StatementWrapper::bindColumn should not be called in drupal:9.1.0 and will error in drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
+    $this->expectDeprecation('StatementWrapper::bindColumn() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Access the client-level statement object via ::getClientStatement(). See https://www.drupal.org/node/3177488');
     $test = NULL;
     $this->assertTrue($this->statement->bindColumn(1, $test));
   }
diff --git a/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php b/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php
index 5cfa3ca..f30072d 100644
--- a/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php
+++ b/core/tests/Drupal/KernelTests/Core/Theme/RegistryLegacyTest.php
@@ -28,7 +28,7 @@ class RegistryLegacyTest extends KernelTestBase {
    * Tests the theme registry with theme functions and multiple subthemes.
    */
   public function testMultipleSubThemes() {
-    $this->expectDeprecation('Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test(). See https://www.drupal.org/node/1831138');
+    $this->expectDeprecation('Unsilenced deprecation: Declaring theme functions is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test_function_suggestions(). See https://www.drupal.org/node/1831138');
     $theme_handler = \Drupal::service('theme_handler');
     \Drupal::service('module_installer')->install(['theme_legacy_test']);
     \Drupal::service('theme_installer')->install(['test_basetheme']);
@@ -47,7 +47,7 @@ public function testMultipleSubThemes() {
    * Tests the theme registry with theme functions with suggestions.
    */
   public function testSuggestionPreprocessFunctions() {
-    $this->expectDeprecation('Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of test_legacy_theme_theme_test_preprocess_suggestions__kitten__meerkat(). See https://www.drupal.org/node/1831138');
+    $this->expectDeprecation('Unsilenced deprecation: Declaring theme functions is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use Twig templates instead of test_legacy_theme_theme_test_preprocess_suggestions__kitten__meerkat(). See https://www.drupal.org/node/1831138');
     $theme_handler = \Drupal::service('theme_handler');
     \Drupal::service('theme_installer')->install(['test_legacy_theme']);
 
diff --git a/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php b/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php
index fc28528..ff1c05f 100644
--- a/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php
+++ b/core/tests/Drupal/Tests/Component/Render/FormattableMarkupTest.php
@@ -106,7 +106,7 @@ public function providerTestUnexpectedPlaceholder() {
    * @group legacy
    */
   public function testNoReplacementUnsupportedVariable() {
-    $this->expectDeprecation('Support for keys without a placeholder prefix is deprecated in Drupal 9.1.0 and will be removed in Drupal 10.0.0. Invalid placeholder (foo) with string: "No replacements"');
+    $this->expectDeprecation('Support for keys without a placeholder prefix is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Invalid placeholder (foo) with string: "No replacements". See https://www.drupal.org/node/2807743');
     $markup = new FormattableMarkup('No replacements', ['foo' => 'bar']);
     // Cast it to a string which will generate the deprecation notice.
     $output = (string) $markup;
diff --git a/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php b/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php
index ab8ad7b..d34c094 100644
--- a/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php
+++ b/core/tests/Drupal/Tests/Core/Database/ConnectionTest.php
@@ -571,7 +571,7 @@ public function testEscapeDatabase($expected, $name, array $identifier_quote = [
    * @group legacy
    */
   public function testIdentifierQuotesDeprecation() {
-    $this->expectDeprecation('In drupal:10.0.0 not setting the $identifierQuotes property in the concrete Connection class will result in an RuntimeException. See https://www.drupal.org/node/2986894');
+    $this->expectDeprecation('Not setting the $identifierQuotes property in the concrete Connection class is deprecated in drupal:9.0.0 and will result in a RuntimeException in drupal:10.0.0. See https://www.drupal.org/node/2986894');
     $mock_pdo = $this->createMock(StubPDO::class);
     new StubConnection($mock_pdo, [], NULL);
   }
diff --git a/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php b/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php
index 638a0b1..e402bd7 100644
--- a/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php
+++ b/core/tests/Drupal/Tests/Core/Theme/RegistryLegacyTest.php
@@ -84,7 +84,7 @@ protected function setUp(): void {
    * Tests getting legacy theme function registry data defined by a module.
    */
   public function testGetLegacyThemeFunctionRegistryForModule() {
-    $this->expectDeprecation('Unsilenced deprecation: Theme functions are deprecated in drupal:8.0.0 and are removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test(). See https://www.drupal.org/node/1831138');
+    $this->expectDeprecation('Unsilenced deprecation: Declaring theme functions is deprecated in drupal:8.0.0 and is removed from drupal:10.0.0. Use Twig templates instead of theme_theme_test_function_suggestions(). See https://www.drupal.org/node/1831138');
     $test_theme = new ActiveTheme([
       'name' => 'test_legacy_theme',
       'path' => 'core/modules/system/tests/themes/test_legacy_theme/test_legacy_theme.info.yml',
diff --git a/core/tests/Drupal/Tests/ExpectDeprecationTest.php b/core/tests/Drupal/Tests/ExpectDeprecationTest.php
index ff2190b..ceb91aa 100644
--- a/core/tests/Drupal/Tests/ExpectDeprecationTest.php
+++ b/core/tests/Drupal/Tests/ExpectDeprecationTest.php
@@ -23,6 +23,7 @@ class ExpectDeprecationTest extends UnitTestCase {
   public function testExpectDeprecation() {
     $this->expectDeprecation('Drupal\Tests\Traits\ExpectDeprecationTrait::addExpectedDeprecationMessage() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901');
     $this->addExpectedDeprecationMessage('Test deprecation');
+    // phpcs:ignore Drupal.Semantics.FunctionTriggerError
     @trigger_error('Test deprecation', E_USER_DEPRECATED);
   }
 
@@ -36,7 +37,9 @@ public function testExpectDeprecationInIsolation() {
     $this->expectDeprecation('Drupal\Tests\Traits\ExpectDeprecationTrait::expectedDeprecations() is deprecated in drupal:9.1.0 and is removed from drupal:10.0.0. Use \Symfony\Bridge\PhpUnit\ExpectDeprecationTrait::expectDeprecation() instead. See https://www.drupal.org/node/3161901');
     $this->addExpectedDeprecationMessage('Test isolated deprecation');
     $this->expectedDeprecations(['Test isolated deprecation2']);
+    // phpcs:ignore Drupal.Semantics.FunctionTriggerError
     @trigger_error('Test isolated deprecation', E_USER_DEPRECATED);
+    // phpcs:ignore Drupal.Semantics.FunctionTriggerError
     @trigger_error('Test isolated deprecation2', E_USER_DEPRECATED);
   }
 
diff --git a/core/tests/Drupal/Tests/Listeners/DeprecationListenerTrait.php b/core/tests/Drupal/Tests/Listeners/DeprecationListenerTrait.php
index 6ef3a4f..8d4dff9 100644
--- a/core/tests/Drupal/Tests/Listeners/DeprecationListenerTrait.php
+++ b/core/tests/Drupal/Tests/Listeners/DeprecationListenerTrait.php
@@ -74,8 +74,8 @@ public static function isDeprecationSkipped($message) {
       '%The "PHPUnit\\\\Framework\\\\TestCase::addWarning\(\)" method is considered internal%',
       // The following deprecations were not added as part of the original
       // issues and thus were not addressed in time for the 9.0.0 release.
-      '%The entity link url update for the "\w+" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2857891.%',
-      '%The operator defaults update for the "\w+" view is deprecated in drupal:9.0.0 and is removed from drupal:10.0.0. Module-provided Views configuration should be updated to accommodate the changes described at https://www.drupal.org/node/2869168.%',
+      '%The entity link url update for the "\w+" view is deprecated in drupal:9.0.0 and is removed from drupal:10\.0\.0\. Module-provided Views configuration should be updated to accommodate the changes described in the change record. See https://www.drupal.org/node/2857891%',
+      '%The operator defaults update for the "\w+" view is deprecated in drupal:9.0.0 and is removed from drupal:10\.0\.0\. Module-provided Views configuration should be updated to accommodate the changes described in the change record. See https://www.drupal.org/node/2869168%',
     ];
     return (bool) preg_filter($dynamic_skipped_deprecations, '$0', $message);
   }
diff --git a/core/tests/Drupal/Tests/Listeners/DrupalListener.php b/core/tests/Drupal/Tests/Listeners/DrupalListener.php
index 0b288bc..00aea1d 100644
--- a/core/tests/Drupal/Tests/Listeners/DrupalListener.php
+++ b/core/tests/Drupal/Tests/Listeners/DrupalListener.php
@@ -97,14 +97,14 @@ public function startTest(Test $test): void {
         $reflected_method = $class->getMethod($method);
         if ($reflected_method->getDeclaringClass()->getName() === get_class($test)) {
           if (!$reflected_method->hasReturnType() || $reflected_method->getReturnType()->getName() !== 'void') {
-            @trigger_error("Declaring ::$method without a void return typehint in " . get_class($test) . " is deprecated in drupal:9.0.0. Typehinting will be required before drupal:10.0.0. See https://www.drupal.org/node/3114724", E_USER_DEPRECATED);
+            @trigger_error("Declaring ::$method without a void return typehint in " . get_class($test) . " is deprecated in drupal:9.0.0 and typehinting will be required before drupal:10.0.0. See https://www.drupal.org/node/3114724", E_USER_DEPRECATED);
           }
         }
       }
     }
     // Check for incorrect visibility of the $modules property.
     if ($class->hasProperty('modules') && !$class->getProperty('modules')->isProtected()) {
-      @trigger_error('The ' . get_class($test) . '::$modules property must be declared protected. See https://www.drupal.org/node/2909426', E_USER_DEPRECATED);
+      @trigger_error('Declaring ' . get_class($test) . '::$modules with public visibility is deprecated in drupal:9.1.0 and must be declared protected in drupal:10.0.0. See https://www.drupal.org/node/2909426', E_USER_DEPRECATED);
     }
   }
 
diff --git a/core/tests/Drupal/Tests/SkippedDeprecationTest.php b/core/tests/Drupal/Tests/SkippedDeprecationTest.php
index b65bdd2..f7cc3f7 100644
--- a/core/tests/Drupal/Tests/SkippedDeprecationTest.php
+++ b/core/tests/Drupal/Tests/SkippedDeprecationTest.php
@@ -13,6 +13,7 @@ class SkippedDeprecationTest extends UnitTestCase {
    * @see \Drupal\Tests\Listeners\DeprecationListenerTrait::getSkippedDeprecations()
    */
   public function testSkippingDeprecations() {
+    // phpcs:ignore Drupal.Semantics.FunctionTriggerError
     @trigger_error('\Drupal\Tests\SkippedDeprecationTest deprecation', E_USER_DEPRECATED);
     $this->addToAssertionCount(1);
   }
@@ -23,6 +24,7 @@ public function testSkippingDeprecations() {
    * @see \Drupal\Tests\Listeners\DeprecationListenerTrait::getSkippedDeprecations()
    */
   public function testSkippingDeprecationsAgain() {
+    // phpcs:ignore Drupal.Semantics.FunctionTriggerError
     @trigger_error('\Drupal\Tests\SkippedDeprecationTest deprecation', E_USER_DEPRECATED);
     $this->addToAssertionCount(1);
   }
diff --git a/core/tests/Drupal/Tests/Traits/PhpUnitWarnings.php b/core/tests/Drupal/Tests/Traits/PhpUnitWarnings.php
index 9e16ae9..7030c20 100644
--- a/core/tests/Drupal/Tests/Traits/PhpUnitWarnings.php
+++ b/core/tests/Drupal/Tests/Traits/PhpUnitWarnings.php
@@ -63,6 +63,7 @@ public function addWarning(string $warning): void {
     if (in_array($warning, self::$deprecationWarnings, TRUE)) {
       // Convert listed PHPUnit deprecations into E_USER_DEPRECATED and prevent
       // each from being raised as a test warning.
+      // phpcs:ignore Drupal.Semantics.FunctionTriggerError
       @trigger_error($warning, E_USER_DEPRECATED);
       return;
     }
