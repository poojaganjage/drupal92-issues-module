diff --git a/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php b/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
index fc8f5bd..566f9f6 100644
--- a/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
+++ b/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php
@@ -84,21 +84,6 @@ public function testGoTo() {
     $this->assertTrue($this->isTestUsingGuzzleClient());
   }
 
-  /**
-   * Tests drupalGet().
-   */
-  public function testDrupalGet() {
-    $this->drupalGet('test-page');
-    $this->assertSession()->statusCodeEquals(200);
-    $this->assertSession()->addressEquals('test-page');
-    $this->drupalGet('/test-page');
-    $this->assertSession()->statusCodeEquals(200);
-    $this->assertSession()->addressEquals('test-page');
-    $this->drupalGet('/test-page/');
-    $this->assertSession()->statusCodeEquals(200);
-    $this->assertSession()->addressEquals('/test-page/');
-  }
-
   /**
    * Tests basic form functionality.
    */
@@ -188,16 +173,6 @@ public function testError() {
     $this->drupalGet('test-error');
   }
 
-  /**
-   * Tests linkExists() with pipe character (|) in locator.
-   *
-   * @see \Drupal\Tests\WebAssert::linkExists()
-   */
-  public function testPipeCharInLocator() {
-    $this->drupalGet('test-pipe-char');
-    $this->assertSession()->linkExists('foo|bar|baz');
-  }
-
   /**
    * Tests linkExistsExact() functionality.
    *
@@ -818,32 +793,6 @@ public function testPageContainsNoDuplicateId() {
     $assert_session->pageContainsNoDuplicateId();
   }
 
-  /**
-   * Tests assertEscaped() and assertUnescaped().
-   *
-   * @see \Drupal\Tests\WebAssert::assertNoEscaped()
-   * @see \Drupal\Tests\WebAssert::assertEscaped()
-   */
-  public function testEscapingAssertions() {
-    $assert = $this->assertSession();
-
-    $this->drupalGet('test-escaped-characters');
-    $assert->assertNoEscaped('<div class="escaped">');
-    $assert->responseContains('<div class="escaped">');
-    $assert->assertEscaped('Escaped: <"\'&>');
-
-    $this->drupalGet('test-escaped-script');
-    $assert->assertNoEscaped('<div class="escaped">');
-    $assert->responseContains('<div class="escaped">');
-    $assert->assertEscaped("<script>alert('XSS');alert(\"XSS\");</script>");
-
-    $this->drupalGet('test-unescaped-script');
-    $assert->assertNoEscaped('<div class="unescaped">');
-    $assert->responseContains('<div class="unescaped">');
-    $assert->responseContains("<script>alert('Marked safe');alert(\"Marked safe\");</script>");
-    $assert->assertNoEscaped("<script>alert('Marked safe');alert(\"Marked safe\");</script>");
-  }
-
   /**
    * Tests deprecation of legacy assertEscaped() and assertNoEscaped().
    *
diff --git a/core/tests/Drupal/FunctionalTests/WebAssertTest.php b/core/tests/Drupal/FunctionalTests/WebAssertTest.php
index c7a588a..0fdfe58 100644
--- a/core/tests/Drupal/FunctionalTests/WebAssertTest.php
+++ b/core/tests/Drupal/FunctionalTests/WebAssertTest.php
@@ -84,4 +84,62 @@ public function testPageTextContainsOnce() {
     $this->assertSession()->pageTextContainsOnce('does-not-exist');
   }
 
+  /**
+   * Tests WebAssert::addressEquals().
+   * Tests WebAssert::statusCodeEquals().
+   *
+   * @covers ::addressEquals
+   * @covers ::statusCodeEquals
+   */
+  public function testDrupalGet() {
+    $this->drupalGet('test-page');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals('test-page');
+    $this->drupalGet('/test-page');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals('test-page');
+    $this->drupalGet('/test-page/');
+    $this->assertSession()->statusCodeEquals(200);
+    $this->assertSession()->addressEquals('/test-page/');
+  }
+
+  /**
+   * Tests WebAssert::linkExists().
+   *
+   * @covers ::addressEquals
+   */
+  public function testPipeCharInLocator() {
+    $this->drupalGet('test-pipe-char');
+    $this->assertSession()->linkExists('foo|bar|baz');
+  }
+
+  /**
+   * Tests WebAssert::assertNoEscaped().
+   * Tests WebAssert::responseContains().
+   * Tests WebAssert::assertEscaped().
+   *
+   * @covers ::assertNoEscaped
+   * @covers ::responseContains
+   * @covers ::assertEscaped
+   */
+  public function testEscapingAssertions() {
+    $assert = $this->assertSession();
+
+    $this->drupalGet('test-escaped-characters');
+    $assert->assertNoEscaped('<div class="escaped">');
+    $assert->responseContains('<div class="escaped">');
+    $assert->assertEscaped('Escaped: <"\'&>');
+
+    $this->drupalGet('test-escaped-script');
+    $assert->assertNoEscaped('<div class="escaped">');
+    $assert->responseContains('<div class="escaped">');
+    $assert->assertEscaped("<script>alert('XSS');alert(\"XSS\");</script>");
+
+    $this->drupalGet('test-unescaped-script');
+    $assert->assertNoEscaped('<div class="unescaped">');
+    $assert->responseContains('<div class="unescaped">');
+    $assert->responseContains("<script>alert('Marked safe');alert(\"Marked safe\");</script>");
+    $assert->assertNoEscaped("<script>alert('Marked safe');alert(\"Marked safe\");</script>");
+  }
+
 }
