diff --git a/core/misc/tableselect.es6.js b/core/misc/tableselect.es6.js
index aa0aa34..20eb6bf 100644
--- a/core/misc/tableselect.es6.js
+++ b/core/misc/tableselect.es6.js
@@ -68,36 +68,52 @@
     };
 
     // Find all <th> with class select-all, and insert the check all checkbox.
-    $table
-      .find('th.select-all')
-      .prepend($(Drupal.theme('checkbox')).attr('title', strings.selectAll))
-      .on('click', (event) => {
-        if ($(event.target).is('input[type="checkbox"]')) {
-          // Loop through all checkboxes and set their state to the select all
-          // checkbox' state.
-          checkboxes.each(function () {
-            const $checkbox = $(this);
-            const stateChanged =
-              $checkbox.prop('checked') !== event.target.checked;
-
-            /**
-             * @checkbox {HTMLElement}
-             */
-            if (stateChanged) {
-              $checkbox.prop('checked', event.target.checked).trigger('change');
-            }
-            // Either add or remove the selected class based on the state of the
-            // check all checkbox.
-
-            /**
-             * @checkbox {HTMLElement}
-             */
-            $checkbox.closest('tr').toggleClass('selected', this.checked);
-          });
-          // Update the title and the state of the check all box.
-          updateSelectAll(event.target.checked);
-        }
-      });
+    $table.find('th.select-all').each(function () {
+      const $this = $(this);
+
+      const $selectAllCheckbox = $(
+        '<input type="checkbox" class="form-checkbox" />',
+      )
+        .attr('title', strings.selectAll)
+        .attr('id', Math.random().toString(16).slice(2, 10));
+      const $selectAllLabel = $('<label>').attr(
+        'for',
+        $selectAllCheckbox.attr('id'),
+      );
+
+      $this
+        .prepend($selectAllCheckbox)
+        .append($selectAllLabel)
+        .on('click', function (event) {
+          if ($(event.target).is('input[type="checkbox"]')) {
+            // Loop through all checkboxes and set their state to the select all
+            // checkbox' state.
+            checkboxes.each(function () {
+              const $checkbox = $(this);
+              const stateChanged =
+                $checkbox.prop('checked') !== event.target.checked;
+
+              /**
+               * @checkbox {HTMLElement}
+               */
+              if (stateChanged) {
+                $checkbox
+                  .prop('checked', event.target.checked)
+                  .trigger('change');
+              }
+              // Either add or remove the selected class based on the state of the
+              // check all checkbox.
+
+              /**
+               * @checkbox {HTMLElement}
+               */
+              $checkbox.closest('tr').toggleClass('selected', this.checked);
+            });
+            // Update the title and the state of the check all box.
+            updateSelectAll(event.target.checked);
+          }
+        });
+    });
 
     // For each of the checkboxes within the table that are not disabled.
     checkboxes = $table
diff --git a/core/misc/tableselect.js b/core/misc/tableselect.js
index cead6c0..ac8b6bd 100644
--- a/core/misc/tableselect.js
+++ b/core/misc/tableselect.js
@@ -38,20 +38,25 @@
       });
     };
 
-    $table.find('th.select-all').prepend($(Drupal.theme('checkbox')).attr('title', strings.selectAll)).on('click', function (event) {
-      if ($(event.target).is('input[type="checkbox"]')) {
-        checkboxes.each(function () {
-          var $checkbox = $(this);
-          var stateChanged = $checkbox.prop('checked') !== event.target.checked;
+    $table.find('th.select-all').each(function () {
+      var $this = $(this);
+      var $selectAllCheckbox = $('<input type="checkbox" class="form-checkbox" />').attr('title', strings.selectAll).attr('id', Math.random().toString(16).slice(2, 10));
+      var $selectAllLabel = $('<label>').attr('for', $selectAllCheckbox.attr('id'));
+      $this.prepend($selectAllCheckbox).append($selectAllLabel).on('click', function (event) {
+        if ($(event.target).is('input[type="checkbox"]')) {
+          checkboxes.each(function () {
+            var $checkbox = $(this);
+            var stateChanged = $checkbox.prop('checked') !== event.target.checked;
 
-          if (stateChanged) {
-            $checkbox.prop('checked', event.target.checked).trigger('change');
-          }
+            if (stateChanged) {
+              $checkbox.prop('checked', event.target.checked).trigger('change');
+            }
 
-          $checkbox.closest('tr').toggleClass('selected', this.checked);
-        });
-        updateSelectAll(event.target.checked);
-      }
+            $checkbox.closest('tr').toggleClass('selected', this.checked);
+          });
+          updateSelectAll(event.target.checked);
+        }
+      });
     });
     checkboxes = $table.find('td input[type="checkbox"]:enabled').on('click', function (e) {
       $(this).closest('tr').toggleClass('selected', this.checked);
